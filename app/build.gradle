plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.binlee.flutter"
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        profile {
            initWith debug
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
        dataBinding true
    }
}

Properties loadLocalProperties() {
    File localPropertiesFile = new File(rootProject.rootDir, "local.properties")
    Properties props = new Properties()
    localPropertiesFile.withReader("UTF-8") { reader -> props.load(reader) }
    return props
}

// 获取 flutter engine 版本号
String getEngineVersion() {
    // 1. 加载 local.properties 文件
    Properties props = loadLocalProperties()
    // 2. 获取 flutter sdk 路径
    String flutterRoot = props.getProperty('flutter.sdk')
    assert flutterRoot != null, "flutter.sdk not set in local.properties"
    assert new File(flutterRoot).exists(), "please install flutter sdk first"
    // 3. 读取版本号
    return new File(flutterRoot, "bin/internal/engine.version").text.trim()
}

final String baseVersion = '1.0.0'
String engineVersion = "${baseVersion}-${getEngineVersion()}"
println("engine version: ${engineVersion}")

dependencies {
    // 同时引入 aar 和 jar
    implementation(fileTree(includes: ['*.jar', '*.aar'], dir: 'libs'))
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // 引入 flutter
    // implementation("io.flutter:flutter_embedding_release:$engineVersion")
    // implementation "io.flutter:armeabi_v7a_release:$engineVersion"
    // implementation "io.flutter:arm64_v8a_release:$engineVersion"

    debugImplementation "io.flutter:flutter_embedding_debug:$engineVersion"
    debugImplementation "io.flutter:arm64_v8a_debug:$engineVersion"
    // debugImplementation "io.flutter:armeabi_v7a_debug:$engineVersion"
    // debugImplementation "io.flutter:x86_debug:$engineVersion"
    // debugImplementation "io.flutter:x86_64_debug:$engineVersion"
}